{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["export default function(config) {\n\n  if(config.Vue === undefined || config.router === undefined){\n    console.warn(\"warning: router helper needs Vue and root router ,see more for guide : https://github.com/Zippowxk/vue-router-keep-alive-helper\")\n    return;\n  }\n  const Vue = config.Vue;\n  const router = config.router;\n  const canRefresh = config.canRefresh === undefined ? true : config.canRefresh;\n  // When 'canRefresh === true' ,RouterStack will make the stack visible in the query of URL path,\n  // Because when a page can refresh , the vm._stack chain is broken.\n  // The query.routerStack will be used as place B to keep the stack chain\n  router._stack = 0;\n  let pre;\n  let isReplace = false;\n\n  router.beforeEach((to, from, next) => {\n    pre = getCurrentVM();\n    next();\n  })\n\n  router.afterEach((to, from) => {\n    // get the vm instance after render\n    Vue.nextTick(() => {\n      if (pre === undefined) {\n        initialCb(to);\n      } else if (isReplace) {\n        replaceCb();\n      } else if (isPush(to)) {\n        pushCb();\n      } else {\n        backCb();\n      }\n      setCurrentVnodeKey();\n    })\n  })\n\n  // hack router.replace function\n  const rtmp = router.replace;\n  router.replace = function(arg, complete, abort) {\n    isReplace = true;\n    rtmp.apply(router, [arguments[0]]);\n  }\n\n  // hack the router.push , canRefresh mode only\n  if (canRefresh) {\n    const ptmp = router.push;\n    router.push = function(arg, complete, abort) {\n      if (canRefresh) {\n        const current = getCurrentVM()\n        if (typeof arg === 'string') {\n          arg = arg.indexOf('?') !== -1 ? arg + `&routerStack=${current._stack + 1}` : arg + `?routerStack=${current._stack + 1}`\n        } else {\n          if (!arg.query) {\n            arg.query = { 'routerStack': current._stack + 1 }\n          } else {\n            arg.query['routerStack'] = current._stack + 1;\n          }\n        }\n      }\n      ptmp.apply(router, [arguments[0]])\n    }\n  }\n\n  /** ********* router helper ************/\n\n  const getCurrentVM = function() {\n    return router.history.current.matched.length > 0 ? router.history.current.matched[0].instances.default : undefined;\n  }\n  const getCurrentVMStack = function() {\n    return getCurrentVM() ? getCurrentVM()._stack : undefined;\n  }\n  const setCurrentVMStack = function(stack) {\n    router.history.current.matched.length > 0 && (router.history.current.matched[0].instances.default._stack = Number(stack));\n  }\n  const setCurrentVnodeKey = function() {\n    const current = getCurrentVM();\n    if (current && current._vnode) { current._vnode.key = Number(current._stack) + router.history.current.path }\n  }\n  /** ********  callback functions ************/\n  const initialCb = function(to) {\n    if (canRefresh) {\n      if (to.query && to.query.routerStack !== undefined) {\n        setCurrentVMStack(to.query.routerStack);\n        router._stack = to.query.routerStack;\n      } else {\n        setCurrentVMStack(0);\n      }\n    } else {\n      setCurrentVMStack(0);\n    }\n  }\n  const pushCb = function() {\n    router._stack++;\n    setCurrentVMStack(router._stack)\n  }\n  const backCb = function() {\n    router._stack--;\n    if (getCurrentVMStack() === undefined) {\n      setCurrentVMStack(pre._stack - 1)\n    }\n    pre.$keepAliveDestroy();\n  }\n  const replaceCb = function() {\n    setCurrentVMStack(pre._stack)\n    pre.$keepAliveDestroy();\n    isReplace = false;\n  }\n  const isPush = function(to) {\n    // in normal , getCurrentVMStack is undefined only happened when push,\n    // But when refresh mode, getCurrentVMStack is undefined can also happened when popback\n    // In this case , the query.routerStack will be used instand of vm._stack\n    const toStack = to.query ? to.query.routerStack !== undefined ? to.query.routerStack : 0 : 0;\n    return (getCurrentVMStack() === undefined && !canRefresh) || (canRefresh && toStack > pre._stack);\n  }\n\n  /** ******** depend functions ************/\n  // add $keepAliveDestroy function to every vm instance instand of $destroy function\n  // remove vnode in cache vnodes when destroy a keep-alive instance,\n  // just in case reuse previous vm instance of this vnode when push to the same page second time\n  const dtmp = Vue.prototype.$destroy;\n  const f = function() {\n    if (this.$vnode && this.$vnode.data.keepAlive) {\n      if (this.$vnode.parent && this.$vnode.parent.componentInstance && this.$vnode.parent.componentInstance.cache) {\n        if (this.$vnode.componentOptions) {\n          var key = this.$vnode.key == null\n            ? this.$vnode.componentOptions.Ctor.cid + (this.$vnode.componentOptions.tag ? `::${this.$vnode.componentOptions.tag}` : '')\n            : this.$vnode.key;\n          var cache = this.$vnode.parent.componentInstance.cache;\n          var keys = this.$vnode.parent.componentInstance.keys;\n          if (cache[key]) {\n            if (keys.length) {\n              var index = keys.indexOf(key);\n              if (index > -1) {\n                keys.splice(index, 1);\n              }\n            }\n            delete cache[key];\n          }\n        }\n      }\n    }\n    dtmp.apply(this, arguments);\n  }\n  Vue.prototype.$keepAliveDestroy = f;\n}"],"names":["config","undefined","Vue","router","pre","canRefresh","_stack","isReplace","beforeEach","to","from","next","getCurrentVM","afterEach","nextTick","initialCb","replaceCb","isPush","pushCb","backCb","setCurrentVnodeKey","rtmp","replace","arg","complete","abort","apply","arguments","ptmp","push","current","indexOf","query","history","matched","length","instances","default","getCurrentVMStack","setCurrentVMStack","stack","Number","_vnode","key","path","routerStack","$keepAliveDestroy","toStack","dtmp","prototype","$destroy","this","$vnode","data","keepAlive","parent","componentInstance","cache","componentOptions","Ctor","cid","tag","keys","index","splice","console","warn"],"mappings":"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"}