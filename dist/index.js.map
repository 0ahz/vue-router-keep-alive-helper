{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const inBrowser = typeof window !== 'undefined'\n\nif (inBrowser) {\n  window.createHelper = createHelper;\n}\n// TODO: 1. abstract mode support 2. destroy bigger id vnode in keep-alive cache\nexport default function createHelper(config) {\n  if (config.Vue === undefined || config.router === undefined) {\n    console.warn('warning: router helper needs Vue and root router ,see more for guide : https://github.com/Zippowxk/vue-router-keep-alive-helper')\n    return;\n  }\n  const Vue = config.Vue;\n  const router = config.router;\n  const mode = router.mode; // hash or history  //TODO: abstract\n  const replaceStay = config.replaceStay || []\n  let hacked = false;\n  router._stack = 0;\n  let pre;\n  let isReplace = false;\n  let replacePrePath;\n  let preStateId = 0;\n  let historyShouldChange = false;\n\n  router.beforeEach((to, from, next) => {\n    pre = getCurrentVM();\n    next();\n  })\n\n  router.afterEach((to, from) => {\n    historyShouldChange = true;\n    // get the vm instance after render\n    Vue.nextTick(() => {\n      if (pre === undefined) {\n        initialCb(to);\n      } else if (isReplace) {\n        replaceCb();\n      } else if (isPush()) {\n        pushCb();\n      } else {\n        backCb();\n      }\n      preStateId = Number(router._stack);\n      setCurrentVnodeKey();\n      const current = getCurrentVM();\n      if (!hacked && current) {\n        hackKeepAliveRender(current.$vnode.parent.componentInstance);\n      }\n      historyShouldChange = false;\n    })\n  })\n\n  // hack router.replace function\n  const rtmp = router.replace;\n  router.replace = function(arg, complete, abort) {\n    isReplace = true;\n    replacePrePath = router.history.current.path;\n    rtmp.apply(router, [arguments[0]]);\n  }\n\n  /** ********  callback functions ************/\n  const initialCb = function(to) {\n    if (isDef(getStateId())) {\n      router._stack = getStateId();\n    } else {\n      setState(0);\n    }\n  }\n  const pushCb = function() {\n    router._stack++;\n    setState(router._stack)\n  }\n  const backCb = function() {\n    router._stack--;\n    pre.$keepAliveDestroy();\n  }\n  const replaceCb = function() {\n    if (!(isDef(replacePrePath) && replaceStay.indexOf(replacePrePath) !== -1)) {\n      pre.$keepAliveDestroy();\n    }\n    isReplace = false;\n    replacePrePath = undefined;\n  }\n  /** ********* hack keep alive render *******************/\n\n  const hackKeepAliveRender = function(vm) {\n    // modify the first keep alive key and catch\n    replaceFirstKeyAndCache(vm, genKey(router._stack))\n\n    const tmp = vm.$options.render\n    vm.$options.render = function() {\n      const slot = this.$slots.default;\n      const vnode = getFirstComponentChild(slot) // vnode is a keep-alive-component-vnode\n      if (historyShouldChange) {\n        if (!isDef(vnode.key)) {\n          if (isReplace) {\n            vnode.key = genKey(router._stack)\n          } else if (isPush()) {\n            vnode.key = genKey(Number(router._stack) + 1)\n          } else {\n            vnode.key = genKey(Number(router._stack) - 1)\n          }\n        }\n      } else {\n        // when historyShouldChange is false should rerender only, should not create new vm ,use the same vnode.key issue#7\n        vnode.key = genKey(router._stack)\n      }\n      return tmp.apply(this, arguments)\n    }\n    hacked = true;\n  }\n\n  /** ********* router helper ************/\n  const getStateId = function () {\n    const state = getCurrentState();\n    return isDef(state) ? state.id : undefined\n  }\n  const setState = function(id) {\n    // optimize file:// URL\n    let path = (mode === 'hash' ? '#' : '') + router.history.current.path;\n    if (window.location.href.startsWith('file://')) {\n      let pre;\n      if (mode === 'hash') {\n        pre = window.location.href.split('#')[0];\n      } else {\n        pre = window.location.href.splice('.html')[0] + '.html';\n      }\n      path = pre + path;\n    }\n    let query = getQuery(router.history.current.query)\n    path = path + query;\n\n    let state = isDef(history.state) ? history.state : {};\n    state['id'] = id;\n    history.replaceState(state, '', path)\n  }\n  const getQuery = function (params) {\n    let query = ''\n    query = Object.keys(params)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n      .join('&');\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    return query;\n  }\n  const getCurrentState = function() {\n    return history.state\n  }\n\n  const isPush = function() {\n    if (!isReplace) {\n      return !isDef(getStateId()) || preStateId < getStateId()\n    }\n    return false;\n  }\n\n  const genKey = function(num) {\n    return 'keep-alive-vnode-key' + Number(num) + router.history.current.path\n  }\n  const genVNodeKey = function(num) {\n    return 'vnode-key' + Number(num) + router.history.current.path\n  }\n  const getCurrentVM = function() {\n    return router.history.current.matched.length > 0 ? router.history.current.matched[0].instances.default : undefined;\n  }\n  const setCurrentVnodeKey = function() {\n    const current = getCurrentVM();\n    if (current && current._vnode) {\n      current._vnode.key = genVNodeKey(router._stack)\n      current._vnode.parent.key = genKey(router._stack)\n    }\n  }\n\n  /** ******** depend functions ************/\n  // add $keepAliveDestroy function to every vm instance instand of $destroy function\n  // remove vnode in cache vnodes when destroy a keep-alive instance,\n  // just in case reuse previous vm instance of this vnode when push to the same page second time\n  const replaceFirstKeyAndCache = function(vm, key) {\n    if (!isDef(vm) || !isDef(vm.cache) || !isDef(vm.keys)) { return }\n    const keys = vm.keys;\n    const cache = vm.cache;\n    if (keys.length === 1) {\n      const vnode = cache[keys[0]]\n      delete cache[keys[0]]\n      keys.splice(0, 1);\n      keys.push(key);\n      cache[key] = vnode;\n    }\n  }\n\n  const dtmp = Vue.prototype.$destroy;\n  const f = function() {\n    if (this.$vnode && this.$vnode.data.keepAlive) {\n      if (this.$vnode.parent && this.$vnode.parent.componentInstance && this.$vnode.parent.componentInstance.cache) {\n        if (this.$vnode.componentOptions) {\n          var key = !isDef(this.$vnode.key)\n            ? this.$vnode.componentOptions.Ctor.cid + (this.$vnode.componentOptions.tag ? `::${this.$vnode.componentOptions.tag}` : '')\n            : this.$vnode.key;\n          var cache = this.$vnode.parent.componentInstance.cache;\n          var keys = this.$vnode.parent.componentInstance.keys;\n          if (cache[key]) {\n            if (keys.length) {\n              var index = keys.indexOf(key);\n              if (index > -1) {\n                keys.splice(index, 1);\n              }\n            }\n            delete cache[key];\n          }\n        }\n      }\n    }\n    dtmp.apply(this, arguments);\n  }\n  Vue.prototype.$keepAliveDestroy = f;\n\n  // getFirstChild\n  const getFirstComponentChild = function (children) {\n    if (Array.isArray(children)) {\n      for (let i = 0; i < children.length; i++) {\n        const c = children[i]\n        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n          return c\n        }\n      }\n    }\n  }\n  const isAsyncPlaceholder = function (node) {\n    return node.isComment && node.asyncFactory\n  }\n  const isDef = function (v) {\n    return v !== undefined && v !== null\n  }\n}\n"],"names":["createHelper","config","undefined","Vue","router","pre","mode","replaceStay","hacked","_stack","replacePrePath","isReplace","preStateId","historyShouldChange","beforeEach","to","from","next","getCurrentVM","afterEach","nextTick","initialCb","replaceCb","isPush","pushCb","backCb","Number","setCurrentVnodeKey","current","hackKeepAliveRender","$vnode","parent","componentInstance","rtmp","replace","arg","complete","abort","history","path","apply","arguments","isDef","getStateId","setState","$keepAliveDestroy","indexOf","vm","replaceFirstKeyAndCache","genKey","tmp","$options","render","slot","this","$slots","default","vnode","getFirstComponentChild","key","state","getCurrentState","id","window","location","href","startsWith","split","splice","getQuery","query","replaceState","params","Object","keys","map","encodeURIComponent","join","length","num","matched","instances","_vnode","cache","push","dtmp","prototype","$destroy","data","keepAlive","componentOptions","Ctor","cid","tag","index","children","Array","isArray","i","c","isAsyncPlaceholder","node","isComment","asyncFactory","v","console","warn"],"mappings":"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"}